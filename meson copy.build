project('fglmnet', 'c',
  version : '0.1',
  default_options : ['warning_level=1'])

add_languages('fortran')

add_project_arguments('-fallow-argument-mismatch', language: 'fortran')
add_project_arguments('-fdefault-real-8', language: 'fortran')
add_project_arguments('-fdefault-double-8', language: 'fortran')
add_project_arguments('-fdefault-integer-8', language: 'fortran')
add_project_arguments('-ffree-line-length-none', language: 'fortran')
add_project_arguments('-fbacktrace', language: 'fortran')
add_project_arguments('-DLINUX', language: 'cpp')
add_project_arguments('-DLINUX64', language: 'cpp')
# Specify a fortran standard to the compiler
add_project_arguments('-std=legacy', language: 'fortran')
# Suppress warnings to find the actual errors
add_project_arguments('-w', language: 'fortran')

# https://mesonbuild.com/Python-module.html
# requires atleast 0.46.0
py_mod = import('python')
py3 = py_mod.find_installation()
py3_dep = py3.dependency()

incdir_numpy = run_command(py3,
  ['-c', 'import os; os.chdir(".."); import numpy; print(numpy.get_include())'],
  check : true
).stdout().strip()

incdir_f2py = run_command(py3,
    ['-c', 'import os; os.chdir(".."); import numpy.f2py; print(numpy.f2py.get_include())'],
    check : true
).stdout().strip()

inc_np = include_directories(incdir_numpy)

py3.extension_module(
  'fglmnet',
  [
    'glmnet5.f',
    'fglmnetmodule.c',
    'fglmnet-f2pywrappers.f',
  ],
  incdir_f2py / 'fortranobject.c',
  include_directories: inc_np,
  dependencies : py3_dep,
  install : true
)

# subdir('src/glmnet/fglmnet')